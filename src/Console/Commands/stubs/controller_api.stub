<?php

namespace DummyNamespace;

use Motor\Backend\Http\Controllers\ApiController;

use DummyRootNamespaceModels\DummyModel;
use DummyRootNamespaceHttp\Requests\Backend\DummyRequest;
use DummyRootNamespaceServices\DummyService;
use DummyRootNamespaceHttp\Resources\DummyResource;
use DummyRootNamespaceHttp\Resources\DummyCollection;

/**
 * Class DummyClass
 * @package DummyNamespace
 */
class DummyClass extends ApiController
{

    protected string $modelResource = 'DummySingularLowercase';

    /**
     * Display a listing of the resource.
     *
     * @return DummyCollection
     */
    public function index()
    {
        $paginator = DummyService::collection()->getPaginator();
        return (new DummyCollection($paginator))->additional(['message' => 'DummySingularTitle collection read']);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param DummyRequest $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store(DummyRequest $request)
    {
        $result = DummyService::create($request)->getResult();
        return (new DummyResource($result))->additional(['message' => 'DummySingularTitle created'])->response()->setStatusCode(201);
    }


    /**
     * Display the specified resource.
     *
     * @param DummyModel $record
     * @return DummyResource
     */
    public function show(DummyModel $record)
    {
        $result = DummyService::show($record)->getResult();
        return (new DummyResource($result))->additional(['message' => 'DummySingularTitle read']);
    }


    /**
     * Update the specified resource in storage.
     *
     * @param DummyRequest $request
     * @param DummyModel        $record
     * @return DummyResource
     */
    public function update(DummyRequest $request, DummyModel $record)
    {
        $result = DummyService::update($record, $request)->getResult();
        return (new DummyResource($result))->additional(['message' => 'DummySingularTitle updated']);
    }


    /**
     * Remove the specified resource from storage.
     *
     * @param DummyModel $record
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy(DummyModel $record)
    {
        $result = DummyService::delete($record)->getResult();

        if ($result) {
            return response()->json(['message' => 'DummySingularTitle deleted']);
        }
        return response()->json(['message' => 'Problem deleting DummySingularTitle'], 404);
    }
}
